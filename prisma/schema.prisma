generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

model BusAgency {
    agency_id    String     @id
    agency_name  String
    agency_color String?
    routes       BusRoute[]
}

model BusRoute {
    route_id         String @id
    agency_id        String
    route_short_name String

    agency BusAgency      @relation(fields: [agency_id], references: [agency_id])
    trips  BusTrip[]
    stops  BusRouteStop[]
}

model BusStop {
    stop_id   String @id
    stop_name String
    latitude  Float
    longitude Float

    routes BusRouteStop[]

    User User[]
}

model BusRouteStop {
    route_id String
    stop_id  String

    route BusRoute @relation(fields: [route_id], references: [route_id])
    stop  BusStop  @relation(fields: [stop_id], references: [stop_id])

    @@id([route_id, stop_id])
}

model BusTrip {
    trip_id       String  @id
    route_id      String
    service_id    String
    trip_headsign String
    shape_id      String?

    route BusRoute  @relation(fields: [route_id], references: [route_id])
    shape BusShape? @relation(fields: [shape_id], references: [shape_id])
}

model BusShape {
    shape_id     String          @id
    shape_points BusShapePoint[]
    BusTrip      BusTrip[]
}

model BusShapePoint {
    shape_id            String
    shape_pt_lat        Float
    shape_pt_lon        Float
    shape_pt_sequence   Int
    shape_dist_traveled Float?

    shape BusShape @relation(fields: [shape_id], references: [shape_id])

    @@id([shape_id, shape_pt_sequence])
}

model SubwayStation {
    station_id       String @id
    station_name     String
    latitude         Float
    longitude        Float
    route_short_name String
}

model StationParentStation {
    station_id     String
    parent_station String

    @@id([station_id, parent_station])
}

model User {
    user_id String
    stop_id String

    stop BusStop @relation(fields: [stop_id], references: [stop_id])

    @@id([user_id, stop_id])
}
